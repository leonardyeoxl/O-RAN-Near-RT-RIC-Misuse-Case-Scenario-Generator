{
    "CAPEC-117": {
        "capec_id": "CAPEC-117",
        "type": "Interception",
        "description": "An adversary monitors data streams to or from the target for information gathering purposes. This attack may be undertaken to solely gather sensitive information or to support a further attack against the target. This attack pattern can involve sniffing network traffic as well as other types of data streams (e.g. radio). The adversary can attempt to initiate the establishment of a data stream or passively observe the communications as they unfold. In all variants of this attack, the adversary is not the intended recipient of the data stream. In contrast to other means of gathering information (e.g., targeting data leaks), the adversary must actively position themself so as to observe explicit data channels (e.g. network traffic) and read the content. However, this attack differs from a Adversary-In-the-Middle (CAPEC-94) attack, as the adversary does not alter the content of the communications nor forward data to the intended recipient.",
        "mitigations": "Leverage encryption to encode the transmission of data thus making it accessible only to authorized parties.",
        "child_relation": ["CAPEC-157", "CAPEC-499", "CAPEC-651"],
        "parent_relation": [],
        "tags": [
            "Interception",
            "Data interception",
            "Information gathering",
            "Sniffing",
            "Network traffic monitoring",
            "Passive observation",
            "Data stream monitoring",
            "Data channel observation",
            "Data leakage",
            "Data security",
            "Encryption",
            "Authorized access",
            "Network security",
            "Information security",
            "Data privacy"
        ]
    },
    "CAPEC-157": {
        "capec_id": "CAPEC-157",
        "type": "Sniffing Attacks",
        "description": "In this attack pattern, the adversary intercepts information transmitted between two third parties. The adversary must be able to observe, read, and/or hear the communication traffic, but not necessarily block the communication or change its content. Any transmission medium can theoretically be sniffed if the adversary can examine the contents between the sender and recipient. Sniffing Attacks are similar to Adversary-In-The-Middle attacks (CAPEC-94), but are entirely passive. AiTM attacks are predominantly active and often alter the content of the communications themselves.",
        "mitigations": "Encrypt sensitive information when transmitted on insecure mediums to prevent interception.",
        "child_relation": ["CAPEC-31", "CAPEC-57", "CAPEC-65", "CAPEC-158", "CAPEC-609"],
        "parent_relation": ["CAPEC-117"],
        "related_weaknesses": ["CWE-311"],
        "tags": [
            "Sniffing Attacks",
            "Information interception",
            "Passive eavesdropping",
            "Communication interception",
            "Traffic monitoring",
            "Data sniffing",
            "Packet sniffing",
            "Network eavesdropping",
            "Passive interception",
            "Third-party interception",
            "Data privacy",
            "Data security",
            "Encryption",
            "Insecure mediums",
            "Information leakage",
            "Network security",
            "Transmission Medium",
            "Sends"
        ]
    },
    "CAPEC-87": {
        "capec_id": "CAPEC-87",
        "type": "Forceful Browsing",
        "description": "An attacker employs forceful browsing (direct URL entry) to access portions of a website that are otherwise unreachable. Usually, a front controller or similar design pattern is employed to protect access to portions of a web application. Forceful browsing enables an attacker to access information, perform privileged operations and otherwise reach sections of the web application that have been improperly protected.",
        "mitigations": "Authenticate request to every resource. In addition, every page or resource must ensure that the request it is handling has been made in an authorized context. Forceful browsing can also be made difficult to a large extent by not hard-coding names of application pages or resources. This way, the attacker cannot figure out, from the application alone, the resources available from the present context.",
        "child_relation": ["CAPEC-115"],
        "parent_relation": [],
        "related_weaknesses": ["CWE-425", "CWE-285", "CWE-693"],
        "tags": [
            "Forceful Browsing",
            "Direct URL entry",
            "Unauthorized access",
            "Web application vulnerability",
            "Web resource exploitation",
            "Front controller bypass",
            "Privilege escalation",
            "Improper access protection",
            "Authentication",
            "Access control",
            "Context-based authorization",
            "Request validation",
            "Web security",
            "Web application security",
            "Authorization vulnerability",
            "URL manipulation"
        ]
    },
    "CAPEC-153": {
        "capec_id": "CAPEC-153",
        "type": "Input Data Manipulation",
        "description": "An attacker exploits a weakness in input validation by controlling the format, structure, and composition of data to an input-processing interface. By supplying input of a non-standard or unexpected form an attacker can adversely impact the security of the target. For example, using a different character encoding might cause dangerous text to be treated as safe text. Alternatively, the attacker may use certain flags, such as file extensions, to make a target application believe that provided data should be handled using a certain interpreter when the data is not actually of the appropriate type. This can lead to bypassing protection mechanisms, forcing the target to use specific components for input processing, or otherwise causing the user's data to be handled differently than might otherwise be expected. This attack differs from Variable Manipulation in that Variable Manipulation attempts to subvert the target's processing through the value of the input while Input Data Manipulation seeks to control how the input is processed.",
        "mitigations": "",
        "child_relation": [],
        "parent_relation": ["CAPEC-126", "CAPEC-128", "CAPEC-267"],
        "related_weaknesses": ["CWE-20"],
        "tags": [
            "Input Data Manipulation",
            "Input validation",
            "Data format manipulation",
            "Data structure manipulation",
            "Data composition manipulation",
            "Input processing vulnerability",
            "Character encoding manipulation",
            "File extension manipulation",
            "Protection mechanism bypass",
            "Security impact",
            "Data handling",
            "Input manipulation techniques",
            "Input security",
            "Vulnerability exploitation",
            "Input processing control"
        ]
    },
    "CAPEC-128": {
        "capec_id": "CAPEC-128",
        "type": "Integer Attacks",
        "description": "An attacker takes advantage of the structure of integer variables to cause these variables to assume values that are not expected by an application. For example, adding one to the largest positive integer in a signed integer variable results in a negative number. Negative numbers may be illegal in an application and the application may prevent an attacker from providing them directly, but the application may not consider that adding two positive numbers can create a negative number do to the structure of integer storage formats.",
        "mitigations": "",
        "child_relation": ["CAPEC-153"],
        "parent_relation": ["CAPEC-92"],
        "related_weaknesses": ["CWE-682"],
        "tags": [
            "Integer Attacks",
            "Integer manipulation",
            "Integer variable exploitation",
            "Integer overflow",
            "Integer underflow",
            "Integer boundary manipulation",
            "Signed integer vulnerability",
            "Integer storage format",
            "Unexpected integer values",
            "Arithmetic operations",
            "Number representation",
            "Application behavior",
            "Integer security",
            "Vulnerability exploitation",
            "Numeric manipulation",
            "Integer-based attacks"
        ]
    }
}